{"version":3,"sources":["nice-button/nice-button.js","assets/crossover-proposal-the-crew.gif","App/App.js","index.js"],"names":["NiceButton","className","isPrimary","isSecondary","isDisabled","isLoading","children","otherProps","niceButtonClasses","classNames","Boolean","buttonDisabled","disabled","getInitialCards","cards","_","each","suit","maxNumber","range","number","cardId","getCardId","cardObj","wasPlayed","Card","onClickCard","evt","updatedCard","props","card","setCardState","cardClasses","this","onClick","Component","Suit","availableCards","map","sortBy","pickBy","playedCards","Proposal","src","proposalGif","alt","App","state","doShowProposal","newCards","setState","onClickReset","suits","uniq","values","suitRows","noCardsChanged","isEqual","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8647699.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport \"nice-button/nice-button.scss\";\n\nconst NiceButton = ({\n  className,\n  isPrimary,\n  isSecondary,\n  isDisabled,\n  isLoading,\n  children,\n  ...otherProps\n}) => {\n  const niceButtonClasses = classNames(\"nice-button\", {\n    [className]: Boolean(className),\n    \"primary-button\": isPrimary,\n    \"secondary-button\": isSecondary,\n  });\n  const buttonDisabled = isDisabled || isLoading;\n  return (\n    <div className=\"nice-button-container\">\n      <button\n        className={niceButtonClasses}\n        disabled={buttonDisabled}\n        {...otherProps}\n      >\n        {children}\n        {isLoading && <div className=\"button-loading\" />}\n      </button>\n    </div>\n  );\n};\n\nNiceButton.propTypes = {\n  className: PropTypes.string,\n  isPrimary: PropTypes.bool,\n  isSecondary: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  isLoading: PropTypes.bool,\n};\n\nexport default NiceButton;\n\nexport const CircleButton = ({\n  className,\n  isSmall,\n  color,\n  children,\n  ...otherProps\n}) => {\n  const colorClass = {\n    red: \"red-circle\",\n    blue: \"blue-circle\",\n    green: \"green-circle\",\n    yellow: \"yellow-circle\",\n    orange: \"orange-circle\",\n    dark: \"dark-circle\",\n    gray: \"\",\n  }[color];\n  const circleButtonClasses = classNames(\"circle-button\", {\n    [className]: Boolean(className),\n    [colorClass]: Boolean(colorClass),\n    \"small-circle-button\": isSmall,\n  });\n  return (\n    <div className={circleButtonClasses} {...otherProps}>\n      {children}\n    </div>\n  );\n};\n\nCircleButton.propTypes = {\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    \"red\",\n    \"blue\",\n    \"green\",\n    \"yellow\",\n    \"orange\",\n    \"dark\",\n    \"gray\",\n  ]),\n  isSmall: PropTypes.bool,\n};\n\nexport const LinkButton = ({ className, children, ...otherProps }) => {\n  return (\n    <div className=\"link-button\" {...otherProps}>\n      {children}\n    </div>\n  );\n};\n\nLinkButton.propTypes = {\n  className: PropTypes.string,\n};\n","export default __webpack_public_path__ + \"static/media/crossover-proposal-the-crew.0a869ca9.gif\";","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport _ from \"lodash\";\n\nimport \"App/App.scss\";\nimport NiceButton from \"nice-button/nice-button\";\n\nimport proposalGif from \"assets/crossover-proposal-the-crew.gif\";\n\nconst cardShape = PropTypes.shape({\n  cardId: PropTypes.string.isRequired,\n  suit: PropTypes.oneOf([\"red\", \"blue\", \"green\", \"yellow\", \"rocket\"])\n    .isRequired,\n  number: PropTypes.number.isRequired,\n});\n\nconst getCardId = ({ suit, number }) => `${suit}_${number}`;\n\nconst getInitialCards = () => {\n  const cards = {};\n  _.each([\"red\", \"green\", \"blue\", \"yellow\", \"rocket\"], (suit) => {\n    const maxNumber = suit === \"rocket\" ? 4 : 9;\n    _.each(_.range(1, maxNumber + 1), (number) => {\n      const cardId = getCardId({ suit, number });\n      const cardObj = {\n        cardId,\n        suit,\n        number,\n        wasPlayed: false,\n      };\n      cards[cardId] = cardObj;\n    });\n  });\n  return cards;\n};\n\nclass Card extends Component {\n  static propTypes = {\n    card: cardShape.isRequired,\n    setCardState: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const cardClasses = classNames(\"card\", this.props.card.suit, {\n      \"was-played\": this.props.card.wasPlayed,\n    });\n    return (\n      <div className={cardClasses} onClick={this.onClickCard}>\n        <div className=\"card-inner\">{this.props.card.number}</div>\n      </div>\n    );\n  }\n\n  /* Helpers. */\n\n  onClickCard = (evt) => {\n    const updatedCard = {\n      ...this.props.card,\n      wasPlayed: !this.props.card.wasPlayed,\n    };\n    this.props.setCardState(updatedCard);\n  };\n}\n\nclass Suit extends Component {\n  static propTypes = {\n    cards: PropTypes.objectOf(cardShape).isRequired,\n    setCardState: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const availableCards = _.map(\n      _.sortBy(_.pickBy(this.props.cards, { wasPlayed: false }), \"number\"),\n      (card) => (\n        <Card\n          card={card}\n          setCardState={this.props.setCardState}\n          key={card.cardId}\n        />\n      )\n    );\n    const playedCards = _.map(\n      _.sortBy(_.pickBy(this.props.cards, { wasPlayed: true }), \"number\"),\n      (card) => (\n        <Card\n          card={card}\n          setCardState={this.props.setCardState}\n          key={card.cardId}\n        />\n      )\n    );\n    return (\n      <div className=\"suit\">\n        <div className=\"suit-available\">{availableCards}</div>\n        <div className=\"vertical-bar\"></div>\n        <div className=\"suit-played\">{playedCards}</div>\n      </div>\n    );\n  }\n}\n\nclass Proposal extends Component {\n  render() {\n    return (\n      <div className=\"proposal-container\">\n        <img src={proposalGif} alt=\"Loading...\" />\n      </div>\n    );\n  }\n}\n\nclass App extends Component {\n  state = {\n    cards: getInitialCards(),\n    doShowProposal: false,\n  };\n\n  render() {\n    const suits = _.uniq(_.map(_.values(this.state.cards), \"suit\"));\n\n    const suitRows = _.map(suits, (suit) => {\n      const cards = _.pickBy(this.state.cards, { suit });\n      return <Suit cards={cards} setCardState={this.setCardState} key={suit} />;\n    });\n\n    const noCardsChanged = _.isEqual(this.state.cards, getInitialCards());\n\n    if (this.state.doShowProposal) {\n      return <Proposal />;\n    }\n\n    return (\n      <div className=\"App\">\n        {suitRows}\n        <div className=\"button-row\">\n          <NiceButton\n            isPrimary={true}\n            onClick={this.onClickReset}\n            isDisabled={noCardsChanged}\n          >\n            Reset Cards\n          </NiceButton>\n        </div>\n        {}\n      </div>\n    );\n  }\n\n  /* Helpers. */\n\n  setCardState = (updatedCard) => {\n    const { cardId } = updatedCard;\n    const newCards = {\n      ...this.state.cards,\n      [cardId]: updatedCard,\n    };\n    this.setState({ cards: newCards });\n  };\n\n  onClickReset = (evt) => {\n    if (!this.state.doShowProposal) {\n      this.setState({ doShowProposal: true });\n      return;\n    }\n    this.setState({ cards: getInitialCards() });\n  };\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"App/App\";\n\nimport \"index.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}